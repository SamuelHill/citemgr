//
// top-level build only needs to set configurations
//


// version definitions for all dependencies
apply from: "${project.rootDir}/confs/versions.gradle"


// schemas for projects:
apply from: "${project.rootDir}/confs/schemas.gradle"


// settings for core subproject publication to nexus: allow dynamic override
if (hasProperty('pub')) {
    System.err.print "Using publication configuration from ${pub}"
    File confFile = new File(pub)
    if (! confFile.exists()) {
        throw new Exception("No configuration file ${pub} found.")
    }
    apply from: pub

} else {
    File confFile = new File("${project.rootDir}/confs/pubconf.gradle")
    if (! confFile.exists()) {
        throw new Exception("No configuration file 'pubconf.gradle' found.")
    }
    println "Using default publication configuration in 'pubconf.gradle'"
    apply from: confFile
}


// settings for :core build:  allow dynamic override
if (hasProperty('conf')) {
    System.err.print "Using configuration data from ${conf}"
    File confFile = new File(conf)
    if (! confFile.exists()) {
        throw new Exception("No configuration file ${conf} found.")
    }
    apply from: conf

} else {
    File confFile = new File("${project.rootDir}/confs/coreconf.gradle")
    if (! confFile.exists()) {
        throw new Exception("No configuration file ${confFile} found.")
    }
    println "Using default configuration in 'coreconf.gradle'"
    apply from: "${project.rootDir}/confs/coreconf.gradle"
}




subprojects {
  group = "org.homermultitext"
  version = '0.6.0'	
  tasks.withType(Jar) {
    archivesBaseName = "citemgr"
  }
}